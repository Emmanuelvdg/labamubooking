
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://iuvzqkanauykigrdracx.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Iml1dnpxa2FuYXV5a2lncmRyYWN4Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDg5MjcyNTUsImV4cCI6MjA2NDUwMzI1NX0.MMJDdvBRwY09jEgKMhcKPUE0auCTMm3Z3aqzpAImzow";

// Enhanced client configuration with improved session persistence
export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: typeof window !== 'undefined' ? localStorage : undefined,
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
    flowType: 'pkce',
    // Enhanced session persistence settings
    storageKey: 'labamu-booking-auth',
    debug: process.env.NODE_ENV === 'development'
  },
  // Add retry configuration for better reliability
  global: {
    headers: {
      'X-Client-Info': 'labamu-booking@1.0.0'
    }
  }
});

// Add connection health check
export const checkSupabaseConnection = async (): Promise<boolean> => {
  try {
    const { data, error } = await supabase.from('business_types').select('id').limit(1);
    return !error;
  } catch (error) {
    console.error('Supabase connection check failed:', error);
    return false;
  }
};

// Export session utilities
export const getStoredSession = () => {
  if (typeof window === 'undefined') return null;
  try {
    const stored = localStorage.getItem('labamu-booking-auth');
    return stored ? JSON.parse(stored) : null;
  } catch (error) {
    console.error('Failed to retrieve stored session:', error);
    return null;
  }
};

export const clearStoredSession = () => {
  if (typeof window === 'undefined') return;
  try {
    localStorage.removeItem('labamu-booking-auth');
    // Also clear any other auth-related items
    Object.keys(localStorage).forEach(key => {
      if (key.includes('supabase') || key.includes('auth')) {
        localStorage.removeItem(key);
      }
    });
  } catch (error) {
    console.error('Failed to clear stored session:', error);
  }
};
